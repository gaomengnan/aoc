#+title: Substrings of length k with k-1 distinct elements

*** Desc

Given a string s consisting only lowercase alphabets and an integer k. Find the count of all substrings of length k which have exactly k-1 distinct characters.

**** Examples

#+begin_example
Input: s = "abcc", k = 2
Output: 1
Explaination: Possible substring of length k = 2 are,
ab : 2 distinct characters
bc : 2 distinct characters
cc : 1 distinct characters
Only one valid substring so, count is equal to 1.
#+end_example


*** Apporach

#+begin_src c

#include <algorithm>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <vector>
using namespace std;

class Solution {
public:
  int substrCount(string &s, int k) {
    int n = s.size();
    unordered_map<char, int> mp;

    int left = 0;
    int ans = 0;

    for (int r = 0; r < n; ++r) {
      mp[s[r] - 'a']++;
      while (r - left + 1 > k) {
        if (--mp[s[left] - 'a'] == 0) {
          mp.erase(s[left] - 'a');
        }
        left++;
      }

      if (mp.size() == k - 1 && r - left + 1 == k) {
        ans++;
      }
    }

    return ans;
  }
};
int main() {

  string s = "clwst";
  int k = 4;

  Solution sol;
  cout << sol.substrCount(s, k) << endl;

  return 0;
}


#+end_src
