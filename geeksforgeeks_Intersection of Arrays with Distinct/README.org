* Intersection of Arrays with Distinct Elements

** 问题描述

给定两个未排序的整数数组 =a[]= 和 =b[]=，每个数组都包含不同的元素，任务是返回两个数组交集（或公共元素）的元素数量。

两个数组的交集可以定义为包含两个数组之间不同公共元素的集合。

** 示例

#+BEGIN_EXAMPLE
输入: a[] = {1, 2, 3, 4, 5, 6}, b[] = {3, 4, 5, 6, 7}
输出: 4
解释: 公共元素是 3, 4, 5, 6

输入: a[] = {10, 20, 30, 40, 50}, b[] = {15, 20, 25, 30, 35}
输出: 2
解释: 公共元素是 20, 30
#+END_EXAMPLE

** 解决方案

该解决方案在对两个数组进行排序后使用双指针技术：

1. 对两个数组进行排序
2. 使用两个指针同时遍历两个数组
3. 比较两个指针处的元素：
   - 如果数组 =a= 中的元素较小，则将指针 =i= 向前移动
   - 如果数组 =b= 中的元素较小，则将指针 =j= 向前移动
   - 如果元素相等，则增加计数器并将两个指针都向前移动
4. 继续操作直到其中一个数组被完全遍历

** 时间复杂度

- 排序: O(n log n + m log m)，其中 n 和 m 分别是数组 a 和 b 的长度
- 遍历: O(n + m)
- 总体: O(n log n + m log m)

** 空间复杂度

- O(1) 额外空间（不包括排序算法使用的空间）

** 使用方法

#+BEGIN_SRC python
solution = Solution()
result = solution.intersectSize([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7])
print(result)  # 输出: 4
#+END_SRC
