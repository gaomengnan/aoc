#+title: Kth distance

*** Description

Given an unsorted array arr and a number k which is smaller than the size of the array. Return true if the array contains any duplicate within k distance throughout the array else false.

*** Examples
#+begin_example
Input: arr[] = [1, 2, 3, 4, 1, 2, 3, 4], k = 3
Output: false
Explanation: All duplicates are more than k distance away.
#+end_example

*** Solution
1. HashMap

#+begin_src c
#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

class Solution {
public:
  bool checkDuplicatesWithinK(vector<int> &arr, int k) {
    unordered_map<int, int> mp;
    int n  = arr.size();

    for (int i = 0; i < n; i++) {
      if (mp.find(arr[i]) != mp.end()) {
        int distance = i - (mp.find(arr[i])->second);
        if (distance <=k) {
          return true;
        }
      }
      if (mp.find(arr[i]) == mp.end()) {
        mp[arr[i]] = i;
      }
    }
    return false;
  };
};
#+end_src
