* 问题

** Length of longest subarray

*** Description

Given an array arr[], return the length of the longest subarray of non-negative integers. Note: Subarray here means a continuous part of the array.

*** Examples
#+begin_example
Input: arr[] = [2, 3, 4, -1, -2, 1, 5, 6, 3]
Output: 4
Explanation: The subarray [ 1, 5, 6, 3] has longest length 4 and contains no negative integers
#+end_example


#+begin_src python :results output
class Solution:
    def longestSubarray(self, arr):
        n = len(arr)
        slow = -1
        fast = 0
        ans = 0

        while fast < n:
            if arr[fast] >= 0:
                if slow == -1:
                    slow = fast
                ans = max(fast-slow + 1, ans)
            else:
                slow = -1
            fast +=1
        return ans


print(Solution().longestSubarray([2, 3, 4, -1, -2, 1, 5, 6, 3]))

#+end_src

#+RESULTS:
: 4
