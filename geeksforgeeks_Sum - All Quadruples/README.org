* Sum - All Quadruples

Given an array arr[] of integers and another integer target. You have to find all unique quadruples from the given array whose sum is equal to the given target.

Note: All the quadruples should be internally sorted, i.e for any quadruple [q1, q2, q3, q4] it should be : q1 ≤ q2 ≤ q3 ≤ q4.

** Examples:

#+begin_center
Input: arr[] = [0, 0, 2, 1, 1], target = 3
Output: [[0, 0, 1, 2]]
Explanation: Sum of 0, 0, 1, 2 is equal to 3.
#+end_center


*** 解法

1. 前缀和

   #+begin_src python
class Solution:
    def fourSum(self, arr, target):
        arr.sort()

        n = len(arr)

        pair_sums = defaultdict(list)

        results = []

        for i in range(n):
            for j in range(i + 1, n):
                # print(i, j)

                pre_sum = arr[i] + arr[j]

                left_sum = target - pre_sum

                for z in pair_sums[left_sum]:
                    # print("sum", z)
                    # print("i=",arr[i],"j=", arr[j])
                    results.append(z + [arr[i], arr[j]])

            # k< i
            for k in range(i):
                toSum = arr[k] + arr[i]

                pair_sums[toSum].append([arr[k], arr[i]])

        unique_sorted_data = [list(item) for item in set(tuple(sub) for sub in results)]

        return unique_sorted_data

   #+end_src
