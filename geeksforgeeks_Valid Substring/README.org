* 问题

** Valid Substring

*** 描述

Given a string s consisting only of opening and closing parentheses ( and ), find the length of the longest valid (well-formed) parentheses substring.

Note: The length of the smallest valid substring () is 2.

*** 示例


nput: s = "(()("
Output: 2
Explanation: The longest valid substring is (). Its length is 2.


*** 解法

1. two pointer


#+begin_src python

class Solution:
    def maxLen(self, s):
        max_len = 0
        left = right = 0
        # 左到右
        for c in s:
            if c == '(':
                left += 1
            else:
                right += 1
            if left == right:
                max_len = max(max_len, 2 * right)
            elif right > left:
                left = right = 0

        left = right = 0
        # 右到左
        for c in reversed(s):
            if c == '(':
                left += 1
            else:
                right += 1
            if left == right:
                max_len = max(max_len, 2 * left)
            elif left > right:
                left = right = 0

        return max_len

#+end_src
